"""empty message

Revision ID: ed8f75901c70
Revises: 88d8644fcb9b
Create Date: 2022-09-27 04:33:36.341161

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ed8f75901c70'
down_revision = '88d8644fcb9b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('size')
    op.drop_table('status')
    op.drop_table('role')
    op.drop_table('type')
    op.add_column('client', sa.Column('created_on', sa.DateTime(), nullable=False))
    op.drop_column('client', 'created')
    op.add_column('order', sa.Column('rent_start', sa.DateTime(), nullable=True))
    op.add_column('order', sa.Column('rent_end', sa.DateTime(), nullable=True))
    op.drop_column('order', 'finish_date')
    op.drop_column('order', 'start_date')
    op.add_column('owner', sa.Column('created_on', sa.DateTime(), nullable=False))
    op.add_column('owner', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('owner', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('owner', 'company',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=120),
               existing_nullable=True)
    op.create_foreign_key(None, 'owner', 'user', ['user_id'], ['id'])
    op.drop_column('owner', 'created')
    op.add_column('user', sa.Column('role', sa.String(length=12), nullable=False))
    op.add_column('user', sa.Column('created_on', sa.DateTime(), nullable=False))
    op.alter_column('user', 'password',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=10),
               existing_nullable=False)
    op.drop_constraint('user_role_id_fkey', 'user', type_='foreignkey')
    op.drop_column('user', 'created')
    op.drop_column('user', 'role_id')
    op.add_column('valla', sa.Column('tipology', sa.String(length=20), nullable=False))
    op.add_column('valla', sa.Column('layout', sa.String(length=20), nullable=False))
    op.add_column('valla', sa.Column('light', sa.Boolean(), nullable=True))
    op.add_column('valla', sa.Column('created_on', sa.DateTime(), nullable=False))
    op.add_column('valla', sa.Column('status', sa.String(length=20), nullable=False))
    op.alter_column('valla', 'comment',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
    op.drop_constraint('valla_type_id_fkey', 'valla', type_='foreignkey')
    op.drop_constraint('valla_size_id_fkey', 'valla', type_='foreignkey')
    op.drop_constraint('valla_status_id_fkey', 'valla', type_='foreignkey')
    op.drop_column('valla', 'ligth')
    op.drop_column('valla', 'created')
    op.drop_column('valla', 'format')
    op.drop_column('valla', 'type_id')
    op.drop_column('valla', 'status_id')
    op.drop_column('valla', 'size_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('valla', sa.Column('size_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('valla', sa.Column('status_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('valla', sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('valla', sa.Column('format', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('valla', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('valla', sa.Column('ligth', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.create_foreign_key('valla_status_id_fkey', 'valla', 'status', ['status_id'], ['id'])
    op.create_foreign_key('valla_size_id_fkey', 'valla', 'size', ['size_id'], ['id'])
    op.create_foreign_key('valla_type_id_fkey', 'valla', 'type', ['type_id'], ['id'])
    op.alter_column('valla', 'comment',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('valla', 'status')
    op.drop_column('valla', 'created_on')
    op.drop_column('valla', 'light')
    op.drop_column('valla', 'layout')
    op.drop_column('valla', 'tipology')
    op.add_column('user', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.create_foreign_key('user_role_id_fkey', 'user', 'role', ['role_id'], ['id'])
    op.alter_column('user', 'password',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=80),
               existing_nullable=False)
    op.drop_column('user', 'created_on')
    op.drop_column('user', 'role')
    op.add_column('owner', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'owner', type_='foreignkey')
    op.alter_column('owner', 'company',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=80),
               existing_nullable=True)
    op.drop_column('owner', 'user_id')
    op.drop_column('owner', 'is_active')
    op.drop_column('owner', 'created_on')
    op.add_column('order', sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('order', sa.Column('finish_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('order', 'rent_end')
    op.drop_column('order', 'rent_start')
    op.add_column('client', sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('client', 'created_on')
    op.create_table('type',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='type_pkey')
    )
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='role_pkey')
    )
    op.create_table('status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='status_pkey')
    )
    op.create_table('size',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='size_pkey')
    )
    # ### end Alembic commands ###
